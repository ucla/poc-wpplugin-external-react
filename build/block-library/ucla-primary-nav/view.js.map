{"version":3,"file":"block-library/ucla-primary-nav/view.js","mappings":";;;;;AAAA;AACA,SAASA,aAAa,CAAEC,OAAO,EAAG;EACjCA,OAAO,CACLC,gBAAgB,CAAE,wBAAwB,CAAE,CAC5CC,OAAO,CAAE,UAAWC,MAAM,EAAG;IAC7BA,MAAM,CAACC,YAAY,CAAE,eAAe,EAAE,OAAO,CAAE;EAChD,CAAC,CAAE;AACL;AAEA,SAASC,oBAAoB,CAAEC,KAAK,EAAG;EACtC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,OAAO,CAAE,iBAAiB,CAAE;EAC9D,MAAMC,aAAa,GAAGH,YAAY,CAACI,YAAY,CAAE,eAAe,CAAE;EAElE,IAAKD,aAAa,KAAK,MAAM,EAAG;IAC/BX,aAAa,CAAEQ,YAAY,CAACE,OAAO,CAAE,2BAA2B,CAAE,CAAE;EACrE,CAAC,MAAM;IACN;IACA,MAAMG,aAAa,GAAGL,YAAY,CAACE,OAAO,CACzC,2BAA2B,CAC3B;IACD,MAAMI,gBAAgB,GAAGN,YAAY,CAACE,OAAO,CAC5C,+FAA+F,CAC/F;IACDI,gBAAgB,CACdZ,gBAAgB,CAAE,2BAA2B,CAAE,CAC/CC,OAAO,CAAE,UAAWY,KAAK,EAAG;MAC5B,IAAKA,KAAK,KAAKF,aAAa,EAAG;QAC9Bb,aAAa,CAAEe,KAAK,CAAE;MACvB;IACD,CAAC,CAAE;IACJ;IACAP,YAAY,CAACH,YAAY,CAAE,eAAe,EAAE,MAAM,CAAE;EACrD;AACD;;AAEA;AACA;AACAW,MAAM,CAACC,gBAAgB,CAAE,MAAM,EAAE,MAAM;EACtC,MAAMC,cAAc,GAAGC,QAAQ,CAACjB,gBAAgB,CAC/C,sCAAsC,CACtC;EAEDgB,cAAc,CAACf,OAAO,CAAE,UAAWiB,MAAM,EAAG;IAC3CA,MAAM,CAACH,gBAAgB,CAAE,OAAO,EAAEX,oBAAoB,CAAE;EACzD,CAAC,CAAE;;EAEH;EACAa,QAAQ,CAACF,gBAAgB,CAAE,OAAO,EAAE,UAAWV,KAAK,EAAG;IACtD,MAAMc,gBAAgB,GAAGF,QAAQ,CAACjB,gBAAgB,CACjD,sBAAsB,CACtB;IACDmB,gBAAgB,CAAClB,OAAO,CAAE,UAAWmB,KAAK,EAAG;MAC5C,IAAK,CAAEA,KAAK,CAACC,QAAQ,CAAEhB,KAAK,CAACE,MAAM,CAAE,EAAG;QACvCT,aAAa,CAAEsB,KAAK,CAAE;MACvB;IACD,CAAC,CAAE;EACJ,CAAC,CAAE;EACH;EACAH,QAAQ,CAACF,gBAAgB,CAAE,OAAO,EAAE,UAAWV,KAAK,EAAG;IACtD,MAAMiB,aAAa,GAAGL,QAAQ,CAACjB,gBAAgB,CAC9C,qCAAqC,CACrC;IACDsB,aAAa,CAACrB,OAAO,CAAE,UAAWmB,KAAK,EAAG;MACzC,IAAK,CAAEA,KAAK,CAACC,QAAQ,CAAEhB,KAAK,CAACE,MAAM,CAAE,EAAG;QACvCT,aAAa,CAAEsB,KAAK,CAAE;MACvB,CAAC,MAAM,IAAKf,KAAK,CAACkB,GAAG,KAAK,QAAQ,EAAG;QACpC,MAAMrB,MAAM,GAAGkB,KAAK,CAACI,aAAa,CAAE,wBAAwB,CAAE;QAC9D1B,aAAa,CAAEsB,KAAK,CAAE;QACtB;QACAlB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuB,KAAK,EAAE;MAChB;IACD,CAAC,CAAE;EACJ,CAAC,CAAE;AACJ,CAAC,CAAE,C","sources":["webpack://ucla-wcl-wpblocks/./src/block-library/ucla-primary-nav/view.js"],"sourcesContent":["// Open on click functionality.\nfunction closeSubmenus( element ) {\n\telement\n\t\t.querySelectorAll( '[aria-expanded=\"true\"]' )\n\t\t.forEach( function ( toggle ) {\n\t\t\ttoggle.setAttribute( 'aria-expanded', 'false' );\n\t\t} );\n}\n\nfunction toggleSubmenuOnClick( event ) {\n\tconst buttonToggle = event.target.closest( '[aria-expanded]' );\n\tconst isSubmenuOpen = buttonToggle.getAttribute( 'aria-expanded' );\n\n\tif ( isSubmenuOpen === 'true' ) {\n\t\tcloseSubmenus( buttonToggle.closest( '.wp-block-navigation-item' ) );\n\t} else {\n\t\t// Close all sibling submenus.\n\t\tconst parentElement = buttonToggle.closest(\n\t\t\t'.wp-block-navigation-item'\n\t\t);\n\t\tconst navigationParent = buttonToggle.closest(\n\t\t\t'.wp-block-navigation__submenu-container, .wp-block-navigation__container, .wp-block-page-list'\n\t\t);\n\t\tnavigationParent\n\t\t\t.querySelectorAll( '.wp-block-navigation-item' )\n\t\t\t.forEach( function ( child ) {\n\t\t\t\tif ( child !== parentElement ) {\n\t\t\t\t\tcloseSubmenus( child );\n\t\t\t\t}\n\t\t\t} );\n\t\t// Open submenu.\n\t\tbuttonToggle.setAttribute( 'aria-expanded', 'true' );\n\t}\n}\n\n// Necessary for some themes such as TT1 Blocks, where\n// scripts could be loaded before the body.\nwindow.addEventListener( 'load', () => {\n\tconst submenuButtons = document.querySelectorAll(\n\t\t'.wp-block-navigation-submenu__toggle'\n\t);\n\n\tsubmenuButtons.forEach( function ( button ) {\n\t\tbutton.addEventListener( 'click', toggleSubmenuOnClick );\n\t} );\n\n\t// Close on click outside.\n\tdocument.addEventListener( 'click', function ( event ) {\n\t\tconst navigationBlocks = document.querySelectorAll(\n\t\t\t'.wp-block-navigation'\n\t\t);\n\t\tnavigationBlocks.forEach( function ( block ) {\n\t\t\tif ( ! block.contains( event.target ) ) {\n\t\t\t\tcloseSubmenus( block );\n\t\t\t}\n\t\t} );\n\t} );\n\t// Close on focus outside or escape key.\n\tdocument.addEventListener( 'keyup', function ( event ) {\n\t\tconst submenuBlocks = document.querySelectorAll(\n\t\t\t'.wp-block-navigation-item.has-child'\n\t\t);\n\t\tsubmenuBlocks.forEach( function ( block ) {\n\t\t\tif ( ! block.contains( event.target ) ) {\n\t\t\t\tcloseSubmenus( block );\n\t\t\t} else if ( event.key === 'Escape' ) {\n\t\t\t\tconst toggle = block.querySelector( '[aria-expanded=\"true\"]' );\n\t\t\t\tcloseSubmenus( block );\n\t\t\t\t// Focus the submenu trigger so focus does not get trapped in the closed submenu.\n\t\t\t\ttoggle?.focus();\n\t\t\t}\n\t\t} );\n\t} );\n} );\n"],"names":["closeSubmenus","element","querySelectorAll","forEach","toggle","setAttribute","toggleSubmenuOnClick","event","buttonToggle","target","closest","isSubmenuOpen","getAttribute","parentElement","navigationParent","child","window","addEventListener","submenuButtons","document","button","navigationBlocks","block","contains","submenuBlocks","key","querySelector","focus"],"sourceRoot":""}