{"version":3,"file":"block-library/accordion/index.js","mappings":"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","sources":["webpack://ucla-wcl-wpblocks/./node_modules/@wordpress/icons/build-module/library/chevron-up-down.js","webpack://ucla-wcl-wpblocks/./wcl-react-poc/src/components/Accordion/index.js","webpack://ucla-wcl-wpblocks/./src/block-library/accordion/edit.js","webpack://ucla-wcl-wpblocks/./src/block-library/accordion/save.js","webpack://ucla-wcl-wpblocks/./src/block-library/accordion/editor.scss?0eb4","webpack://ucla-wcl-wpblocks/external window \"React\"","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"blockEditor\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"blocks\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"element\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"i18n\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"primitives\"]","webpack://ucla-wcl-wpblocks/webpack/bootstrap","webpack://ucla-wcl-wpblocks/webpack/runtime/compat get default export","webpack://ucla-wcl-wpblocks/webpack/runtime/define property getters","webpack://ucla-wcl-wpblocks/webpack/runtime/hasOwnProperty shorthand","webpack://ucla-wcl-wpblocks/webpack/runtime/make namespace object","webpack://ucla-wcl-wpblocks/./src/block-library/accordion/index.js"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst chevronUpDown = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m12 20-4.5-3.6-.9 1.2L12 22l5.5-4.4-.9-1.2L12 20zm0-16 4.5 3.6.9-1.2L12 2 6.5 6.4l.9 1.2L12 4z\"\n}));\nexport default chevronUpDown;\n//# sourceMappingURL=chevron-up-down.js.map","import { useState } from 'react';\n\n/**\n * \n * @param {Component} [props.children] - Required - Inner content of accordion. Content can be HTML.\n * @param {string or component} [props.title] - Required - Link text.\n * @param {string} [props.className] Class name to add to outer wrapper for customization.\n * \n * As of 11/22 WordPress does not allow hook calls during the save block mode therefore separate out the\n * markup from the interactive portion of the function so that Save can load markup only. \n * \n * Component classes work without creating separation between parent with state management and child markup only comp\n * however using function classes and hooks is considered the modern standard and uses\n * much leaner syntax. Interactivity is reloaded on the front-end through the viewScript. \n * - ESat\n */\n\n\nconst Accordion = (props) => {\n    const {\n        className = false,\n        title = '',\n        children,\n        valuesAreHtml = false\n    } = props;\n\n    const [showBody, setShowBody] = useState(false);\n\n    const toggleContentDisplay = () => {\n        setShowBody(!showBody);\n    };\n\n    return (\n        <AccordionMarkup\n            className={className}\n            title={title}\n            valuesAreHtml={valuesAreHtml}\n            showBody={showBody}\n            toggleContentDisplay={toggleContentDisplay}\n        >\n            {children}\n        </AccordionMarkup>\n    )\n}\n\nexport const AccordionMarkup = (props) => {\n    const {\n        className = false,\n        title = '',\n        children = '',\n        toggleContentDisplay = false,\n        showBody = false,\n        valuesAreHtml = false\n    } = props;\n\n    return (\n        <section className={`accordion${className ? ' ' + className : ''}`}>\n            <dl>\n                <button onMouseDown={toggleContentDisplay} className=\"accordion__title\" aria-expanded=\"false\">\n                    {valuesAreHtml &&\n                        <dt dangerouslySetInnerHTML={{ __html: title }} />\n                    }\n                    {!valuesAreHtml &&\n                        <dt>{title}</dt>\n                    }\n                </button>\n                {valuesAreHtml &&\n                    <dd className=\"accordion__content\" style={{ display: `${showBody ? 'block' : 'none'}` }}\n                        dangerouslySetInnerHTML={{ __html: children }}\n                    >\n                    </dd>\n                }\n                {!valuesAreHtml &&\n                    <dd className=\"accordion__content\" style={{ display: `${showBody ? 'block' : 'none'}` }}>\n                        {children}\n                    </dd>\n                }\n            </dl>\n        </section>\n    );\n}\n\nexport default Accordion;","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\n\n\nimport { RichText, InnerBlocks } from '@wordpress/block-editor';\n\n\n/**\n * Can include React file without parsing during build because React is available in \n * the browser. https://www.cssigniter.com/how-to-use-external-react-components-in-your-gutenberg-blocks/\n */\n\n/** El Note Node Modules are excluded in orig webpack config. Added include of wcl components poc found in node-modules\n * so that repo could be included as a dependency using NPM as is currently done except for React\n * components instead of global css. Each component should have it's own CSS or import from global into component.\n * \n * NOTE: The WCL React components would ordinarily be located under /node_modules and added\n * through the repository referenced in the package.json just like the current WCL repo is currently included in the existing plugin. To make it easier for the POC I\n * moved the package to the root of the project folder so that I could save it to the POC repo.\n * \n*/\n\nimport Accordion from '/wcl-react-poc/src/components/Accordion';\n\n// used for easier testing\n//import Accordion from './Accordion.function';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n * @param {Object} [props]           Properties passed from the editor.\n * @param {Object} [props.attributes]\n * @param {string} [props.setAttributes]\n * @param {string} [props.className] Class name generated for the block.\n * @return {WPElement} Element to render.\n */\n\nexport default function Edit({ attributes, setAttributes, clientId }) {\n    const {\n        title = '',\n        blockId,\n        className = false\n    } = attributes;\n\n    React.useEffect(() => {\n        if (!blockId) {\n            setAttributes({ blockId: clientId });\n        }\n    }, []);\n\n    const onChangeTitle = (value) => {\n        setAttributes({ title: value });\n    };\n\n    const richTextElement = (\n        <RichText tagName=\"span\"\n            value={title}\n            onChange={onChangeTitle}\n            placeholder={\n                __(\"Enter title here...\", 'ucla-wcl-wpblocks')\n            } />\n    );\n\n\n    /** #Example of 3rd-party React component being used. - El */\n    return (\n        <div data-accordionroot={clientId}>\n            <Accordion\n                className={className}\n                blockId={blockId}\n                title={richTextElement}\n            >\n                <InnerBlocks />\n            </Accordion>\n        </div>\n    );\n};\n","/* eslint-disable no-unused-vars */\nimport { RichText, InnerBlocks } from '@wordpress/block-editor';\n\n\n/** Node Modules is excluded in orig webpack config. Added include of wcl components poc found in node-modules\n * so that repo could be included as a dependency using NPM as is currently done except for React\n * components instead of global css. Each component should have it's own CSS or import from global into component.\n */\n\n/** \n * Example of 3rd-party React component being used.\n * IMPORTANT!! Load markup only version durring save. (no interactivity aka no hooks otherwise React 321 error)\n *  - El */\nimport { AccordionMarkup } from '/wcl-react-poc/src/components/Accordion';\n\n// used for easier testing during dev.\n//import { AccordionMarkup } from './Accordion.function';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized  by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n * @param {Object} [props]           Properties passed from the editor.\n * @param {Object} props.attributes\n * @param {string} props.attributes.title\n * @param {string} props.attributes.className\n * @return {WPElement} Element to render.\n */\n\n/**\n * Would be great if WordPress would ignore interactivity (hooks) during save and load React components on the front end\n * by default or through a switch value in block.json. Until then have to use viewScript to reload React component.\n * \n */\n\nconst save = ({ attributes: { title, blockId, className } }) => {\n    const richTextElement = (\n        <RichText.Content tagName=\"span\"\n            value={title} />\n    )\n\n    return (\n        <div data-accordionroot={blockId}>\n            <AccordionMarkup\n                className={className}\n                title={richTextElement}\n            >\n                <InnerBlocks.Content />\n            </AccordionMarkup>\n        </div >\n    );\n}\n\nexport default save;\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { chevronUpDown as icon } from '@wordpress/icons';\n\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n\ticon,\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave\n});\n"],"names":["useState","Accordion","props","className","title","children","valuesAreHtml","showBody","setShowBody","toggleContentDisplay","createElement","AccordionMarkup","onMouseDown","dangerouslySetInnerHTML","__html","style","display","__","RichText","InnerBlocks","Edit","attributes","setAttributes","clientId","blockId","React","useEffect","onChangeTitle","value","richTextElement","save","registerBlockType","chevronUpDown","icon","metadata","name","edit"],"sourceRoot":""}