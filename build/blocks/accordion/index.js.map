{"version":3,"file":"blocks/accordion/index.js","mappings":"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","sources":["webpack://ucla-wcl-wpblocks/./src/blocks/accordion/Accordion.function.js","webpack://ucla-wcl-wpblocks/./src/blocks/accordion/edit.js","webpack://ucla-wcl-wpblocks/./src/blocks/accordion/save.js","webpack://ucla-wcl-wpblocks/./src/blocks/accordion/editor.scss?d65d","webpack://ucla-wcl-wpblocks/external window \"React\"","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"blockEditor\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"blocks\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"element\"]","webpack://ucla-wcl-wpblocks/external window [\"wp\",\"i18n\"]","webpack://ucla-wcl-wpblocks/webpack/bootstrap","webpack://ucla-wcl-wpblocks/webpack/runtime/compat get default export","webpack://ucla-wcl-wpblocks/webpack/runtime/define property getters","webpack://ucla-wcl-wpblocks/webpack/runtime/hasOwnProperty shorthand","webpack://ucla-wcl-wpblocks/webpack/runtime/make namespace object","webpack://ucla-wcl-wpblocks/./src/blocks/accordion/index.js"],"sourcesContent":["import React from 'react';\n\n/**\n * \n * @param {Component} [props.children] - Required - Inner content of accordion. Content can be HTML.\n * @param {Boolean} [props.interactive] - Turns off interactivity. See note below.\n * @param {string or component} [props.title] - Required - Link text.\n * @param {string} [props.className] Class name to add to outer wrapper for customization.\n * \n * Ability to turn off interactivity is required by the WordPress save process.\n * Hooks break the serialization process (React 321 error). Alternative option is to use React\n * Component class however using function classes and hooks is considered the modern standard and uses\n * much leaner syntax. Interactivity is reloaded on the front-end through the viewScript.\n * Hooks must also be called with React. syntax, e.g., React.useState, rather thank stand-alone.\n * - ESat\n */\n\n\nconst Accordion = (props) => {\n    const {\n        className = false,\n        title = '',\n        children,\n        interactive = true,\n        valuesAreHtml = false\n    } = props;\n\n    return (\n        <>\n            {interactive &&\n                <AccordionInteractive\n                    className={className}\n                    title={title}\n                    content={children}\n                    valuesAreHtml={valuesAreHtml}\n                />\n            }\n            {!interactive &&\n                <AccordionStatic\n                    className={className}\n                    title={title}\n                    content={children}\n                    valuesAreHtml={valuesAreHtml}\n                />\n            }\n        </>\n    )\n}\n\nconst AccordionInteractive = (props) => {\n    const {\n        className = false,\n        title = '',\n        content = '',\n        valuesAreHtml = false\n    } = props;\n\n    const [showBody, setShowBody] = React.useState(false);\n\n    const toggleContentDisplay = () => {\n        setShowBody(!showBody);\n    };\n\n    return (\n        <AccordionMarkup\n            className={className}\n            title={title}\n            content={content}\n            valuesAreHtml={valuesAreHtml}\n            showBody={showBody}\n            toggleContentDisplay={toggleContentDisplay}\n        />\n    )\n}\n\nconst AccordionStatic = (props) => {\n    const {\n        className = false,\n        title = '',\n        content = '',\n        valuesAreHtml = false\n    } = props;\n\n    let toggleContentDisplay, showBody = false\n\n    return (\n        <AccordionMarkup\n            className={className}\n            title={title}\n            content={content}\n            valuesAreHtml={valuesAreHtml}\n            showBody={showBody}\n            toggleContentDisplay={toggleContentDisplay}\n        />\n    )\n}\n\n\nconst AccordionMarkup = (props) => {\n    const {\n        className = false,\n        title = '',\n        content = '',\n        toggleContentDisplay = false,\n        showBody = false,\n        valuesAreHtml = false\n    } = props;\n\n    return (\n        <section className={`accordion${className ? ' ' + className : ''}`}>\n            <dl>\n                <button onMouseDown={toggleContentDisplay} className=\"accordion__title\" aria-expanded=\"false\">\n                    {valuesAreHtml &&\n                        <dt dangerouslySetInnerHTML={{ __html: title }} />\n                    }\n                    {!valuesAreHtml &&\n                        <dt>{title}</dt>\n                    }\n                </button>\n                {valuesAreHtml &&\n                    <dd className=\"accordion__content\" style={{ display: `${showBody ? 'block' : 'none'}` }}\n                        dangerouslySetInnerHTML={{ __html: content }}\n                    >\n                    </dd>\n                }\n                {!valuesAreHtml &&\n                    <dd className=\"accordion__content\" style={{ display: `${showBody ? 'block' : 'none'}` }}>\n                        {content}\n                    </dd>\n                }\n            </dl>\n        </section>\n    );\n}\n\nexport default Accordion;","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\n\n\nimport { RichText, InnerBlocks } from '@wordpress/block-editor';\n\n\n/**\n * Can include React file without parsing during build because React is available in \n * the browser. https://www.cssigniter.com/how-to-use-external-react-components-in-your-gutenberg-blocks/\n */\n\n/** Node Modules is excluded in orig webpack config. Added include of wcl components poc found in node-modules\n * so that repo could be included as a dependency using NPM as is currently done except for React\n * components instead of global css. Each component should have it's own CSS or import from global into component.\n */\n//import Accordion from 'wcl-react-poc/src/components/Accordion';\nimport Accordion from './Accordion.function';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n * @param {Object} [props]           Properties passed from the editor.\n * @param {Object} [props.attributes]\n * @param {string} [props.setAttributes]\n * @param {string} [props.className] Class name generated for the block.\n * @return {WPElement} Element to render.\n */\n\nexport default function Edit({ attributes, setAttributes, clientId }) {\n    const {\n        title = '',\n        blockId,\n        className = false\n    } = attributes;\n\n    React.useEffect(() => {\n        if (!blockId) {\n            setAttributes({ blockId: clientId });\n        }\n    }, []);\n\n    const onChangeTitle = (value) => {\n        setAttributes({ title: value });\n    };\n\n    const richTextElement = (\n        <RichText tagName=\"span\"\n            value={title}\n            onChange={onChangeTitle}\n            placeholder={\n                __(\"Enter title here...\", 'ucla-wcl-wpblocks')\n            } />\n    );\n\n\n    /** #Example of 3rd-party React component being used. - El */\n    return (\n        <div data-accordionroot={clientId}>\n            <Accordion\n                className={className}\n                blockId={blockId}\n                title={richTextElement}\n            >\n                <InnerBlocks />\n            </Accordion>\n        </div>\n    );\n};\n","/* eslint-disable no-unused-vars */\nimport { RichText, InnerBlocks } from '@wordpress/block-editor';\n\n\n/** Node Modules is excluded in orig webpack config. Added include of wcl components poc found in node-modules\n * so that repo could be included as a dependency using NPM as is currently done except for React\n * components instead of global css. Each component should have it's own CSS or import from global into component.\n */\n\n/** #Example of 3rd-party React component being used. - El */\n//import Accordion from 'wcl-react-poc/src/components/Accordion';\n\nimport Accordion from './Accordion.function';\n//import App from './App'\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized  by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n * @param {Object} [props]           Properties passed from the editor.\n * @param {Object} props.attributes\n * @param {string} props.attributes.title\n * @param {string} props.attributes.className\n * @return {WPElement} Element to render.\n */\n\n/**\n * Would be great if WordPress would remove interactivity during save but allow react to be loaded\n * on front-end by default or through switch in block.json. Until then have to use viewScript to\n * reload React component.\n * \n */\n\n\n// if (window && window.document && window.document.body) {\n//     console.log(window.document.body)\n//     interactive = !document.body.classList.contains('wp-admin');\n// }\n\nconst save = ({ attributes: { title, blockId, className } }) => {\n    let interactive = false;\n\n    const richTextElement = (\n        <RichText.Content tagName=\"span\"\n            value={title} />\n    )\n\n    return (\n        <div data-accordionroot={blockId}>\n            <Accordion\n                className={className}\n                title={richTextElement}\n                interactive={interactive}\n            >\n                <InnerBlocks.Content />\n            </Accordion>\n        </div >\n    );\n}\n\nexport default save;\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport {registerBlockType} from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, { /**\n\t * @see ./edit.js\n\t */\n    edit: Edit,\n\n    /**\n\t * @see ./save.js\n\t */\n    save\n});\n"],"names":["React","Accordion","props","className","title","children","interactive","valuesAreHtml","AccordionInteractive","content","showBody","setShowBody","useState","toggleContentDisplay","AccordionStatic","AccordionMarkup","__html","display","__","RichText","InnerBlocks","Edit","attributes","setAttributes","clientId","blockId","useEffect","onChangeTitle","value","richTextElement","save","registerBlockType","metadata","name","edit"],"sourceRoot":""}